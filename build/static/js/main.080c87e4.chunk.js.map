{"version":3,"sources":["pages/Input.js","pages/List.js","pages/TodoList.js","index.js"],"names":["Input","htmlFor","id","type","value","this","props","inpValue","onChange","handleChange","onClick","addTodo","Component","List","arr1len","renderTodos","arr2len","TodoList","e","setState","target","state","todos","title","done","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","arr1","arr2","length","ReactDOM","render","document","getElementById"],"mappings":"6KAmBeA,E,uKAfP,OACI,6BACA,2BAAOC,QAAQ,OAAf,YACA,2BACIC,GAAG,MACHC,KAAK,OACLC,MAASC,KAAKC,MAAMC,SACpBC,SAAYH,KAAKC,MAAMG,eAE3B,4BAAQC,QAASL,KAAKC,MAAMK,SAA5B,qB,GAXQC,aCiBLC,E,uKAfP,OACI,6BACI,uDAASR,KAAKC,MAAMQ,SACpB,4BACKT,KAAKC,MAAMS,aAAY,IAE5B,uDAASV,KAAKC,MAAMU,SACpB,4BACKX,KAAKC,MAAMS,aAAY,S,GAVzBH,aC2GJK,E,kDAxGX,WAAYX,GAAO,IAAD,8BACd,cAAMA,IAqBVG,aAAe,SAACS,GACZ,EAAKC,SAAS,CAACZ,SAASW,EAAEE,OAAOhB,SAvBnB,EAyBlBO,QAAU,WACkB,IAArB,EAAKU,MAAMd,WAGd,EAAKY,SAAS,CACVG,MAAM,CACF,CACIC,MAAO,EAAKF,MAAMd,SAClBiB,MAAM,IAHT,mBAKE,EAAKH,MAAMC,UAGtB,EAAKH,SAAS,CAACZ,SAAS,OAtCV,EAwClBkB,QAAU,SAACC,GAIP,EAAKP,SAAS,CACVG,MAAO,EAAKD,MAAMC,MAAMK,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOH,QA7C1C,EAyDlBI,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKb,MAAMC,QACpDS,EAASF,GAAOL,MAAQO,EAASF,GAAOL,KACxC,EAAKL,SAAS,CACVG,MAAOS,KA7DG,EAgElBhB,YAAc,SAACS,GACX,OAAO,EAAKH,MAAMC,MAAMa,KAAI,SAACC,EAAKV,GAC9B,GAAGF,GAAMY,EAAKZ,KACV,OAAO,4BACH,2BACId,QAAS,kBAAI,EAAKoB,OAAOJ,IACzBW,QAASb,EACTrB,KAAK,aAET,0BAAMmC,wBAAyB,CAACC,OAAOH,EAAKb,SAC5C,4BACIb,QAAS,kBAAI,EAAKe,QAAQC,KAD9B,qBAxEZ,EAAKL,MAAQ,CACTd,SAAW,GACXe,MAAQ,IAJE,E,gEASd,IAAIA,EAAQkB,aAAaC,QAAQ,SAC9BnB,GACCjB,KAAKc,SAAS,CACVG,MAAOU,KAAKC,MAAMX,O,2CAK1BkB,aAAaE,QACT,QACAV,KAAKE,UAAU7B,KAAKgB,MAAMC,U,+BAgExB,IACCA,EAASjB,KAAKgB,MAAdC,MACHqB,EAAOrB,EAAMK,QAAQ,SAAAC,GAAI,OAAKA,EAAKJ,QACnCoB,EAAOtB,EAAMK,QAAQ,SAAAC,GAAI,OAAIA,EAAKJ,QACtC,OACI,6BACI,kBAAC,EAAD,CACIjB,SAAWF,KAAKgB,MAAMd,SACtBE,aAAgBJ,KAAKI,aACrBE,QAAWN,KAAKM,UAEpB,kBAAC,EAAD,CACII,YAAeV,KAAKU,YACpBD,QAAW6B,EAAKE,OAChB7B,QAAW4B,EAAKC,c,GAlGbjC,aCAvBkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.080c87e4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <label htmlFor=\"inp\">todolist</label>\r\n            <input\r\n                id=\"inp\"\r\n                type=\"text\"\r\n                value = {this.props.inpValue}\r\n                onChange = {this.props.handleChange}\r\n            />\r\n            <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>正在进行{this.props.arr1len}</h2>\r\n                <ul>\r\n                    {this.props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成{this.props.arr2len}</h2>\r\n                <ul >\r\n                    {this.props.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","import React, { Component } from 'react'\r\nimport Input from './Input'\r\nimport List from './List'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inpValue : '',\r\n            todos : []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {todos} = this.state;\r\n        let arr1 = todos.filter( item => !item.done);\r\n        let arr2 = todos.filter( item => item.done);\r\n        return (\r\n            <div>\r\n                <Input\r\n                    inpValue ={this.state.inpValue}\r\n                    handleChange = {this.handleChange}\r\n                    addTodo = {this.addTodo}\r\n                />\r\n                <List\r\n                    renderTodos = {this.renderTodos}\r\n                    arr1len = {arr1.length}\r\n                    arr2len = {arr2.length}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './pages/TodoList';\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);"],"sourceRoot":""}